COMP 321 Project 6: Web Proxy

<Jialiang Yang jy105; Sunny Sun ss303>

We used 2 slip days on this assignment.

---(Do not write lines of text that exceed the width of this line.)------------

DESIGN DISCUSSION

Please answer the following questions about the design of your proxy.

1. Describe the steps taken by your proxy to service a single HTTP transaction
   from beginning to end.  (10-14 sentences)
   First, the proxy listens for incoming HTTP requests using a listening socket.
   Then it accepts a client connection and establishes a new socket when a client
   makes a request. In the next step, the proxy initializes robust I/O for the
   client connection. Then it reads each line of the HTTP request and parses
   the request (extracting the HTTP method, URI, and version from the request).
   It also checks if the request is formatted correctly or if unsupported methods
   (other than "GET") are used. After that, the proxy parses the URI to extract
   the hostname, port and pathname. Next, the proxy tries to connect to a server
   using the extracted hostname and port. Then it forwards the request header to
   the server. Then the proxy reads the response from the server and forwards
   the response back to the client. Last, it logs the transaction in "proxy.log"
   and does the cleanup process (frees dynamically allocated memory and close
   connections). During the process, each transaction is handled in a separate
   thread so that the main server loop can immediately return to listen to new
   connections. 

2. Did you modify the first line of the request message?  If so, how?
   (1-3 sentences)
   Yes, the proxy parses the request line and extracts "method", "uri", "version"
   from the request line. Then it converts the URI to a path-relative URI. Thus,
   the first line is modified to: method, pathname(just the path component of URI), 
   and version.

3. Did you add/remove/modify any request headers?  If so, how?  (1-3 sentences)
   Yes, the proxy removes headers related to connections, including "Connection",
   "Keep-Alive", and "Proxy-Connection". It also adds a header "Connection: close"
   header to all forwarded requests.

4. How did you forward the response message?  (2-4 sentences)
   First, the proxy reads the response using robust I/O, Then it writes the data 
   read from the server to the client using "rio_writen". Then it sends a header 
   "Connection: close" to close the connection. Last, it logs the transaction.

6. How many threads did your proxy use to implement concurrency?  Explain how
   you chose this number.  (3-6 sentences)
   The proxy uses 8 threads to implement concurrency. I chose it depending on
   the hardware capabilities of the computer including CPU cores and RAM. in
   addition, if we need more concurrent connections, the number of threads should
   increase. At the same time, if the requests are complicated, more threads should
   be necessary.

7. How did you write to the access log file?  (1-2 sentences)
   The proxy uses "fwrite" to write data blocks to the log file.

8. How do you ensure atomicity when writing to the access log file?
   (1-2 sentences)
   The proxy uses "log_mutex" so that log entries can be written without being
   corrupted by concurrent accesses. Also, it flushes the stream after each
   write to prevent the loss of data after program crashes.

9. When did you open/close the access log file?  (2 sentences)
   The proxy opens the log file at the start of main function, before connections
   are accepted. It closes the file at the end of main function, as part of the
   cleanup process.
